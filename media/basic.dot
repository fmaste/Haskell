digraph G {

  #clusterrank=local;
  compound=true;
  #newrank=true;
  rankdir=TB;
  #overlap=false;
  #splines=true;
  #ranksep="5 equally"
  #ratio=0.60

  graph [fontname="Liberation Mono"];
  node [fontname="Liberation Mono"];
  edge [fontname="Liberation Mono"];
  #node [shape=record fontsize=10 fontname="Verdana"];

  subgraph cluster_bool {
    label = "Bool type";
    margin=10;
    rank=same;
    Bool [shape=box]
  }

  subgraph cluster_numbers {
    label = "Number types";
    margin=10;
    rank=same;

    subgraph cluster_finite {
      label = "Finite";
      margin=10;
      rank=same;

      subgraph cluster_finite_no {
        label = "Non Floating";
        {
          rank=same;
          Int [shape=box]
          Word [shape=box]
          # Char is not part of Num
          #Char [shape=box]
        }
      }

      subgraph cluster_finite_yes {
        label = "Floating";
        {
          rank=same;
          Float [shape=box;]
          Double [shape=box]
        }
      }

    }

    subgraph cluster_infinite {
      label = "Infinite";
      margin=10;
      rank=same;
      Integer [shape=box]
    }


  }

  subgraph cluster_ord {
    label = "Ordering";
    color=lightgrey;
    node [style=filled,color=white];
    style=filled;
    Eq -> Ord
  }

  subgraph cluster_bounds {
    label = "Bounds";
    color=lightgrey;
    node [style=filled,color=white];
    style=filled;
    Bounded
  }

  subgraph cluster_enum {
    label = "Numeric";
    color=lightgrey;
    node [style=filled,color=white];
    style=filled;
    Enum

    Enum -> Integral
    Real -> Integral
    
    Num -> Fractional
    Fractional -> Floating
    Real -> RealFrac
    Fractional -> RealFrac
    RealFrac -> RealFloat
    Floating -> RealFloat
  }

  Num -> Real
  Ord -> Real
    
  Ord -> Bool [lhead=cluster_bool];
  Enum -> Bool [lhead=cluster_bool];
  Bounded -> Bool [lhead=cluster_bool];

  Ord -> Word [lhead=cluster_numbers];
  Enum -> Word [lhead=cluster_numbers];
  Num -> Word [lhead=cluster_numbers];

  Bounded -> Word [lhead=cluster_finite];

  Integral -> Word [lhead=cluster_finite_no];
  Integral -> Integer [lhead=cluster_infinite];
  
  RealFloat -> Float [lhead=cluster_finite_yes];

# constraint=false;

}
